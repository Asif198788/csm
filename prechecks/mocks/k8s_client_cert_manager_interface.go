// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dell/csm-deployment/prechecks (interfaces: K8sClientCertManagerInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/core/v1"
	v10 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// MockK8sClientCertManagerInterface is a mock of K8sClientCertManagerInterface interface.
type MockK8sClientCertManagerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockK8sClientCertManagerInterfaceMockRecorder
}

// MockK8sClientCertManagerInterfaceMockRecorder is the mock recorder for MockK8sClientCertManagerInterface.
type MockK8sClientCertManagerInterfaceMockRecorder struct {
	mock *MockK8sClientCertManagerInterface
}

// NewMockK8sClientCertManagerInterface creates a new mock instance.
func NewMockK8sClientCertManagerInterface(ctrl *gomock.Controller) *MockK8sClientCertManagerInterface {
	mock := &MockK8sClientCertManagerInterface{ctrl: ctrl}
	mock.recorder = &MockK8sClientCertManagerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockK8sClientCertManagerInterface) EXPECT() *MockK8sClientCertManagerInterfaceMockRecorder {
	return m.recorder
}

// GetAPIResource mocks base method.
func (m *MockK8sClientCertManagerInterface) GetAPIResource(arg0 []byte, arg1 string) (*v10.APIResource, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAPIResource", arg0, arg1)
	ret0, _ := ret[0].(*v10.APIResource)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetAPIResource indicates an expected call of GetAPIResource.
func (mr *MockK8sClientCertManagerInterfaceMockRecorder) GetAPIResource(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAPIResource", reflect.TypeOf((*MockK8sClientCertManagerInterface)(nil).GetAPIResource), arg0, arg1)
}

// GetCertManagerPods mocks base method.
func (m *MockK8sClientCertManagerInterface) GetCertManagerPods(arg0 []byte, arg1, arg2 string) (*v1.PodList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCertManagerPods", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v1.PodList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCertManagerPods indicates an expected call of GetCertManagerPods.
func (mr *MockK8sClientCertManagerInterfaceMockRecorder) GetCertManagerPods(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCertManagerPods", reflect.TypeOf((*MockK8sClientCertManagerInterface)(nil).GetCertManagerPods), arg0, arg1, arg2)
}
