// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dell/csm-deployment/handler (interfaces: PrecheckHandlerInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	model "github.com/dell/csm-deployment/model"
	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockPrecheckHandlerInterface is a mock of PrecheckHandlerInterface interface.
type MockPrecheckHandlerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPrecheckHandlerInterfaceMockRecorder
}

// MockPrecheckHandlerInterfaceMockRecorder is the mock recorder for MockPrecheckHandlerInterface.
type MockPrecheckHandlerInterfaceMockRecorder struct {
	mock *MockPrecheckHandlerInterface
}

// NewMockPrecheckHandlerInterface creates a new mock instance.
func NewMockPrecheckHandlerInterface(ctrl *gomock.Controller) *MockPrecheckHandlerInterface {
	mock := &MockPrecheckHandlerInterface{ctrl: ctrl}
	mock.recorder = &MockPrecheckHandlerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPrecheckHandlerInterface) EXPECT() *MockPrecheckHandlerInterfaceMockRecorder {
	return m.recorder
}

// Precheck mocks base method.
func (m *MockPrecheckHandlerInterface) Precheck(arg0 echo.Context, arg1, arg2 uint, arg3 []model.ModuleType, arg4 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Precheck", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(error)
	return ret0
}

// Precheck indicates an expected call of Precheck.
func (mr *MockPrecheckHandlerInterfaceMockRecorder) Precheck(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Precheck", reflect.TypeOf((*MockPrecheckHandlerInterface)(nil).Precheck), arg0, arg1, arg2, arg3, arg4)
}
