// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dell/csm-deployment/handler (interfaces: PrecheckGetterInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	model "github.com/dell/csm-deployment/model"
	prechecks "github.com/dell/csm-deployment/prechecks"
	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
	reflect "reflect"
)

// MockPrecheckGetterInterface is a mock of PrecheckGetterInterface interface
type MockPrecheckGetterInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPrecheckGetterInterfaceMockRecorder
}

// MockPrecheckGetterInterfaceMockRecorder is the mock recorder for MockPrecheckGetterInterface
type MockPrecheckGetterInterfaceMockRecorder struct {
	mock *MockPrecheckGetterInterface
}

// NewMockPrecheckGetterInterface creates a new mock instance
func NewMockPrecheckGetterInterface(ctrl *gomock.Controller) *MockPrecheckGetterInterface {
	mock := &MockPrecheckGetterInterface{ctrl: ctrl}
	mock.recorder = &MockPrecheckGetterInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPrecheckGetterInterface) EXPECT() *MockPrecheckGetterInterfaceMockRecorder {
	return m.recorder
}

// GetDriverPrechecks mocks base method
func (m *MockPrecheckGetterInterface) GetDriverPrechecks(arg0 string, arg1 []byte, arg2 string, arg3 []model.ModuleType, arg4 echo.Logger) []prechecks.Validator {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDriverPrechecks", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].([]prechecks.Validator)
	return ret0
}

// GetDriverPrechecks indicates an expected call of GetDriverPrechecks
func (mr *MockPrecheckGetterInterfaceMockRecorder) GetDriverPrechecks(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDriverPrechecks", reflect.TypeOf((*MockPrecheckGetterInterface)(nil).GetDriverPrechecks), arg0, arg1, arg2, arg3, arg4)
}

// GetModuleTypePrechecks mocks base method
func (m *MockPrecheckGetterInterface) GetModuleTypePrechecks(arg0, arg1 string, arg2 []byte, arg3 []model.ConfigFile, arg4 map[string]string) []prechecks.Validator {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetModuleTypePrechecks", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].([]prechecks.Validator)
	return ret0
}

// GetModuleTypePrechecks indicates an expected call of GetModuleTypePrechecks
func (mr *MockPrecheckGetterInterfaceMockRecorder) GetModuleTypePrechecks(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetModuleTypePrechecks", reflect.TypeOf((*MockPrecheckGetterInterface)(nil).GetModuleTypePrechecks), arg0, arg1, arg2, arg3, arg4)
}
